%%%%%%%%%%%misc %%%%%

@MISC{peri,
  title = {Performance Engineering Research Institute},
  howpublished = {\url{http://www.peri-scidac.org/}},
  timestamp = {2008.03.14}
}

@MISC{QuinlanEndtoEnd2006,
  author = {Dan Quinlan and Rich Vuduc and Qing Yi},
  title = {An End-to-end Framework for Whole Program Tuning},
  howpublished = {A LACSI Symposium Workshop: Automatic Tuning of Whole Applications},
  month = {october},
  year = {2006},
  note = {http://www.cs.rice.edu/~ken/autotuning/},
  timestamp = {2008.03.14}
}
        

%%%%%%%%% Domain-specific systems %%%%%%%%%

@Article{Baumgartner2005:TCE,
    author = {Gerald Baumgartner and Alexander Auer and David E. Bernholdt
        and Alina Bibireata and Venkatesh Choppella and Daniel Cociorva
        and Xiaoyang Gao and Robert J. Harrison and So Hirata
        and Sriram Krishnamoorthy and Sandhya Krishnan
        and Chi-Chung Lam and Qingda Lu and Marcel Nooijen
        and Russell M. Pitzer and J. Ramanujam and P. Sadayappan
        and Alexander Sibiryakov},
    title = {Synthesis of high-performance parallel programs for a class
        of \emph{ab initio} quantum chemistry models},
    journal = {Proc.~IEEE, Special Issue on
        Program Generation, Optimization, and Adaptation},
    volume = {93},
    number = {2},
    year = {2005}
}

@inproceedings{PHiPAC:ics97,
	Title = {Optimizing matrix multiply using PHiPAC: a portable, high-performance, ANSI C coding methodology},
	Address = {New York, NY, USA},
	Author = {Jeff Bilmes and Krste Asanovic and Chee-Whye Chin and Jim Demmel},
	Booktitle = {Proc. the 11th international conference on Supercomputing},
	Doi = {http://doi.acm.org/10.1145/263580.263662},
	Isbn = {0-89791-902-5},
	Location = {Vienna, Austria},
	Pages = {340--347},
	Publisher = {ACM Press},
	Summary = {write parameterized code-generator; time driver empirical approach to search for parameter values; write for all ANCI C compilers; optimizations include using local variables to remove false dependence, improve register allocation, loop unrolling and pipelining},
	Year = {1997}}

@techreport{Frigo:97,
	Author = {M. Frigo and S. G. Johnson},
	Institution = {Massachusetts Institute of Technology},
	Number = {MIT-LCS-TR-728},
	Title = {{The Fastest Fourier Transform in the West}},
	Year = {1997}}

@inproceedings{Frigo:ICASSP98,
	Author = {M. Frigo and S. Johnson},
	Booktitle = {Proceedings of the International Conference on Acoustics, Speech, and Signal Processing (ICASSP)},
	Pages = {1381},
	Title = {{FFTW: An Adaptive Software Architecture for the FFT}},
	Volume = 3,
	Year = 1998}

@techreport{Whaley:97,
	Author = {R. Clint Whaley and Jack Dongarra},
	Institution = {University of Tennessee},
	Month = {December},
	Note = {\url{http://www.netlib.org/lapack/lawns/lawn131.ps}},
	Number = {UT-CS-97-366},
	Title = {{Automatically Tuned Linear Algebra Software}},
	Year = {1997}}

@inproceedings{ATLAS:sc98,
	Author = {R. Clint Whaley and Jack Dongarra},
	Booktitle = {SuperComputing 1998: High Performance Networking and Computing},
	Title = {Automatically Tuned Linear Algebra Software},
	Year = {1998}}

@inproceedings{SPIRAL00,
	Address = {MIT Lincoln Laboratories, Boston, MA},
	Author = {J. Moura and J. Johnson and R. Johnson and D. Padua and M. Puschel and M. Veloso},
	Booktitle = {Proceedings of the Conference on High-Performance Embedded Computing},
	Title = {SPIRAL: Automatic Implementation of Signal Processing Algorithms},
	Year = {2000}}

@article{ATLAS:PC01,
	Author = {R. Clint Whaley and Antoine Petitet and Jack Dongarra},
	Journal = {Parallel Computing},
	Number = {1},
	Pages = {3--25},
	Title = {Automated Empirical Optimizations of Software and the {ATLAS} Project},
	Volume = {27},
	Year = {2001}}

@article{SPIRAL:2005,
	Author = {Markus P{\"u}schel and Jos{\'e}~M.~F. Moura and Jeremy Johnson and David Padua and Manuela Veloso and Bryan W. Singer and Jianxin Xiong and Franz Franchetti and Aca Ga\v{c}i\'{c} and Yevgen Voronenko and Kang Chen and Robert W. Johnson and Nick Rizzolo},
	Journal = {Proceedings of the IEEE, special issue on Program Generation, Optimization, and Adaptation},
	Number = {2},
	Title = {{SPIRAL}: Code Generation for {DSP} Transforms},
	Volume = {93},
	Year = {2005}}

@Misc{Vuduc2005:OSKI,
    author = {Richard Vuduc and James Demmel and Katherine Yelick},
    title = {{OSKI}: An interface for a self-optimizing library
        of sparse matrix kernels},
    note = {{\tt bebop.cs.berkeley.edu/oski}},
    year = {2005}
}

@InProceedings{SPIRAL:pact09,
  title = {Automatic Tuning of Discrete Fourier Transforms Driven by Analytical Modeling},
  author = {Basilio Fraguela and Yevgen Voronenko and Markus Puschel},
  booktitle = {PACT'09: Parallel Architectures and Compilation Techniques},
  year = 2009,
  month = Sep,
  address = {Raleigh,NC}
}

@inproceedings{OCEANS:97,
	Author = {Bas Aarts and Michel Barreteau and Francois Bodin and Peter Brinkhaus and Zbigniew Chamski and Henri-Pierre Charles and Christine Eisenbeis and John R. Gurd and Jan Hoggerbrugge and Ping Hu and William Jalby and Peter M. W. Knijnenburg and Michael O'Boyle and Erven Rohou and Rizos Sakellariou and Henk Schepers and Andre Seznec and Elena Stohr and Marco Verhoeven and Harry Wijshoff},
	Booktitle = {European Conference on Parallel Processing},
	Pages = {1351-1356},
	Title = {{OCEANS}: Optimizing Compilers for Embedded Applications},
	Url = {citeseer.nj.nec.com/50837.html},
	Year = {1997},
        abstract={}
}

@inproceedings{Yotov:PLDI03,
	Address = {New York, NY, USA},
	Author = {Kamen Yotov and Xiaoming Li and Gang Ren and Michael Cibulskis and Gerald DeJong and Maria Garzaran and David Padua and Keshav Pingali and Paul Stodghill and Peng Wu},
	Booktitle = {PLDI '03: Proceedings of the ACM SIGPLAN 2003 conference on Programming language design and implementation},
	Doi = {http://doi.acm.org/10.1145/781131.781140},
	Isbn = {1-58113-662-5},
	Location = {San Diego, California, USA},
	Pages = {63--76},
	Publisher = {ACM Press},
	Title = {A comparison of empirical and model-driven optimization},
	Year = {2003}}

@article{Yotov05,
     author = "Kamen Yotov and Xiaorning Li and Gang Ren and Maria Garzaran and
          David Padua and Keshav Pingali and Paul Stodghill",
     title  = "A Comparison of Empirical and Model-driven Optimization",
     JOURNAL = "IEEE special issue on Program Generation, Optimization, and Adaptation",
     YEAR = "2005"
} 


%%%%%%%%%  adaptive Optimization %%%%%%%%%%%%%%

@inproceedings{Voss:PPOPP01,
	Author = {Michael J. Voss and Rudolf Eigenmann},
	Booktitle = {ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
	Date-Added = {2007-01-23 13:13:04 -0600},
	Date-Modified = {2007-01-23 13:17:16 -0600},
	Pages = {93-102},
	Title = {High-Level Adaptive Program Optimization with ADAPT},
	Year = {2001}}

@article{Diniz:PLDI97,
	Address = {New York, NY, USA},
	Author = {Pedro C. Diniz and Martin C. Rinard},
	Booktitle = {PLDI '97: Proceedings of the ACM SIGPLAN 1997 conference on Programming language design and implementation},
	Doi = {http://doi.acm.org/10.1145/258915.258923},
	Isbn = {0-89791-907-6},
	Location = {Las Vegas, Nevada, United States},
	Pages = {71--84},
	Publisher = {ACM Press},
	Summary = {periodically update policies based on dynamic feedback},
	Title = {Dynamic feedback: an effective technique for adaptive computing},
	Year = {1997}}

@inproceedings{Cooper:LACSI03,
	Address = {Los Alamos, NM},
	Author = {Keith D. Cooper and Todd Waterman},
	Booktitle = {Proceedings of the LACSI Symposium},
	Publisher = {Los Alamos Computer Science Institute},
	Title = {Investigating adaptive compilation using the MIPSPro compiler},
	Year = {2003}}

%%%%%%%%%  Iterative Optimization %%%%%%%%%%%%%%

@inproceedings{Kisuki99,
	Author = {Toru Kisuki and Peter M. W. Knijnenburg and Michael F. P. O'Boyle and Francois Bodin and Harry A. G. Wijshoff},
	Booktitle = {ISHPC: Second International Symposium on High Performance Computing}, 
	Pages = {121-132},
	Title = {A Feasibility Study in Iterative Compilation},
	Url = {citeseer.nj.nec.com/kisuki99feasibility.html},
	Year = {1999}}

@inproceedings{Kisuki2000,
	Author = {T. Kisuki and P. Knijnenburg and M. O'Boyle and H. Wijsho},
	Booktitle = {Compilers for Parallel Computers},
	Pages = {35-44},
	Title = {Iterative compilation in program optimization},
	Url = {citeseer.nj.nec.com/kisuki00iterative.html},
	Year = {2000}}

@inproceedings{Oboyle:LCPC00,
	Author = {M. O'Boyle and N. Motogelwa and P. Knijnenburg},
	Booktitle = {{Languages and Compilers for Parallel Computing}},
	Title = {Feedback Assisted Iterative Compilation},
	Url = {citeseer.nj.nec.com/446614.html},
	Year = {2000}}

@InProceedings{Pike2002:tiling,
    author = {Geoff Pike and Paul Hilfinger},
    title = {Better tiling and array contraction for compiling
        scientific programs},
    booktitle = {SC},
    address = {Baltimore, MD, USA},
    month = {November},
    year = {2002}
}

@inproceedings{Whaley:ICPP05,
	Address = {Oslo, Norway},
	Author = {R. Clint Whaley and David B. Whalley},
	Booktitle = {34th International Conference on Parallel Processing},
	Ee = {http://dx.doi.org/10.1109/ICPP.2005.77},
	Isbn = {0-7695-2380-3},
	Pages = {89-98},
	Publisher = {IEEE Computer Society},
	Summary = {empirical iterative compiler backend optimization; compare with ATLAS; transformations include SIMD vectorization, loop unrolling, loop control optimization, accumulator expansion; prefetch; non-temporal writes. Named iFKO (iteraetive Floating point Optimizer},
	Title = {Tuning High Performance Kernels through Empirical Compilation.},
	Year = {2005}}

@inproceedings{Cohen:ICS05,
 author = {Cohen, Albert and Sigler, Marc and Girbal, Sylvain and Temam, Olivier and Parello, David and Vasilache, Nicolas},
 title = {Facilitating the search for compositions of program transformations},
 booktitle = {ICS '05: Proceedings of the 19th annual international conference on Supercomputing},
 year = {2005},
 isbn = {1-59593-167-8},
 pages = {151--160},
 location = {Cambridge, Massachusetts},
 doi = {http://doi.acm.org/10.1145/1088149.1088169},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{Tiwari:IPDPS09,
 author = {Tiwari, Ananta and Chen, Chun and Chame, Jacqueline and Hall, Mary and Hollingsworth, Jeffrey K.},
 title = {A scalable auto-tuning framework for compiler optimization},
 booktitle = {IPDPS '09: Proceedings of the 2009 IEEE International Symposium on Parallel\&Distributed Processing},
 year = {2009},
 isbn = {978-1-4244-3751-1},
 pages = {1--12},
 doi = {http://dx.doi.org/10.1109/IPDPS.2009.5161054},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

@inproceedings{Zima:HPDC09,
 author = {Zima, Hans and Hall, Mary and Chen, Chun and Chame, Jaqueline},
 title = {Model-guided autotuning of high-productivity languages for petascale computing},
 booktitle = {HPDC '09: Proceedings of the 18th ACM international symposium on High performance distributed computing},
 year = {2009},
 isbn = {978-1-60558-587-1},
 pages = {151--166},
 location = {Garching, Germany},
 doi = {http://doi.acm.org/10.1145/1551609.1551611},
 publisher = {ACM},
 address = {New York, NY, USA}
 }

%%%%%%%%%%%%%% Search space Exploration %%%%%%%%%%%%

@inproceedings{Pan:Pact06,
	Author = {Zhelong Pan and Rudolf Eigenmann},
	Booktitle = {Proc. Parallel Architectures and Compilation Techniques},
	Date-Added = {2007-01-23 12:49:02 -0600},
	Date-Modified = {2007-01-23 12:50:09 -0600},
	Title = {Fast Automatic Procedure-Level Performance Tuning},
	Year = {2006}}

@inproceedings{Pan:CGO06,
	Author = {Zhelong Pan and Rudolf Eigenmann},
	Title = {Fast and Effective Orchestration of Compiler Optimizations for Automatic Performance Tuning},
	Booktitle = {The 4th Annual International Symposium on Code Generation and Optimization},
	Year = {2006},
        abstract={Development of dynamic, feedback-directed optimization orchestration algorithms, which automatically search for the combination of optimization techniques that achieves the best program performance. The challenge is to develop an orchestration algorithm that finds, in an exponential search space, a solution that is close to the best, in acceptable time. In this paper, we build such a fast and effective algorithm, called Combined Elimination (CE). The key advance of CE over existing techniques is that it takes the least tuning time (57% of the closest alternative), while achieving the same program performance. We conduct the experiments on both a Pentium IV machine and a SPARC II machine, by measuring performance of SPEC CPU2000 benchmarks under a large set of 38 GCC compiler options. Furthermore, through orchestrating a small set of optimizations causing the most degradation, we show that the performance achieved by CE is close to the upper bound obtained by an exhaustive search algorithm. The gap is less than 0.2% on average.
        }
}


@inproceedings{Triant:CGO03,
	Author = {Spyridon Triantafyllis and Manish Vachharajani and Neil Vachharajani and David I. August},
	Booktitle = {International Symposium on Code Generation and Optimization},
	Pages = {204-215},
	Title = {Compiler Optimization-Space Exploration},
	Year = {2003}}

@inproceedings{ECO:IPDPS03,
	Author = {Nastaran Baradaran and Jacqueline Chame and Chun Chen and Pedro Diniz and Mary Hall and Yoon-Ju Lee and Bing Liu and Robert Lucas},
	Booktitle = {International Parallel and Distributed Processing Symposium},
	Title = {ECO: An Empirical-Based Compilation and Optimization System},
	Year = 2003}

@inproceedings{Qasem:LACSI04,
	Address = {Los Alamos, NM},
	Author = {Apan Qasem and Ken Kennedy and John Mellor-Crummey},
	Booktitle = {Proceedings of the LACSI Symposium},
	Publisher = {Los Alamos Computer Science Institute},
	Title = {Automatic Tuning of Whole Applications Using Direct Search and a Performance-based Transformation System},
	Year = {2004}}

@techreport{You:05,
	Author = {Haihang You and Keith Seymour and Jack Dongarra},
	Institution = {Dept. of Computer Science, University of Tennessee},
	Month = May,
	Number = {ICL-UT-05-02},
	Title = {An Effective Empirical Search Method for Automatic Software Tuning},
	Year = {2005}}

@article{Qasem:JOS06,
     Author = {Apan Qasem and Ken Kennedy and John Mellor-Crummey},
     Title = {Automatic Tuning of Whole Applications Using Direct Search 
              and a Performance-based Transformation System},
     Journal = {The Journal of Supercomputing},
     Volume = 36,
     Number = 2,
     Pages = {183-196},
     Year = {2006}}

@inproceedings{Qasem:ICS06,
  author = {Apan Qasem and Ken Kennedy},
  title = {Profitable Loop Fusion and Tiling Using Model-driven Empirical Search},
  booktitle = {Proceedings of the 20th ACM International Conference on SuperComputing (ICS06)}, 
  month = {June},
  year = {2006}}

@inproceedings{Qasem:SMART07,
  author = {Apan Qasem and Ken Kennedy},
  title = {Pruning the Optimization Search Space Using Architecture-aware Code Models},
  booktitle ={Proceedings of the First Workshop on Statistical and Machine Learning Approaches Applied to Architecture and Compilation (SMART07)},
  month = {January},
  year = {2007}}

@Article{Vuduc2004:statmod,
    author = {Richard Vuduc and James Demmel and Jeff Bilmes},
    title = {Statistical Models for Automatic Performance Tuning},
    journal = {International Journal of High Performance Computing
        Applications},
    year = {2004},
    volume = {18},
    number = {1},
    pages = {65--94}
}

@InProceedings{Chun:CGO05,
    author = {Chun Chen and Jacqueline Chame and Mary Hall},
    title = {Combining models and guided empirical search to optimize
        for multiple levels of the memory hierarchy},
    Booktitle = {International Symposium on Code Generation and Optimization},
    address = {San Jose, CA, USA},
    month = {March},
    year = {2005}
}

@InProceedings{Seymour:searchCompare08,
title = {Comparison of search heuristics for empirical code optimization},
author = {Keith Seymour and Haihang You and Jack Dongarra},
booktitle = {iWapt:International Workshop on Automatic Performance Tuning},
year = {2008}
}

@inproceedings{Kulkarni:PLDI04,
 author = {Kulkarni, Prasad and Hines, Stephen and Hiser, Jason and Whalley, David and Davidson, Jack and Jones, Douglas},
 title = {Fast searches for effective optimization phase sequences},
 booktitle = {PLDI: Proceedings of the ACM SIGPLAN 2004 conference on Programming language design and implementation},
 year = {2004},
 isbn = {1-58113-807-5},
 pages = {171--182},
 location = {Washington DC, USA},
 doi = {http://doi.acm.org/10.1145/996841.996863},
 publisher = {ACM},
 address = {New York, NY, USA},
 abstract={
we describe two complementary general approaches for achieving faster searches for effective optimization sequences when using a genetic algorithm. The first approach reduces the search time by avoiding unnecessary executions of the application when possible. Results indicate search time reductions of 62%, on average, often reducing searches from hours to minutes. The second approach modifies the search so fewer generations are required to achieve the same results. Measurements show this approach decreases the average number of required generations by 59%. These improvements have the potential for making evolutionary compilation a viable choice for tuning embedded applications.
 }
 }

@article{Cooper:JSC06,
  author    = {Keith D. Cooper and
               Alexander Grosul and
               Timothy J. Harvey and
               Steven W. Reeves and
               Devika Subramanian and
               Linda Torczon and
               Todd Waterman},
  title     = {Exploring the structure of the space of compilation sequences
               using randomized search algorithms},
  journal   = {The Journal of Supercomputing},
  volume    = {36},
  number    = {2},
  year      = {2006},
  pages     = {135-151},
  ee        = {http://dx.doi.org/10.1007/s11227-006-7954-5},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

%%%%%%%%%%%%%% Machine learning %%%%%%

@inproceedings{Agakov:CGO06,
 author = {Agakov, F. and Bonilla, E. and Cavazos, J. and Franke, B. and Fursin, G. and O'Boyle, M. F. P. and Thomson, J. and Toussaint, M. and Williams, C. K. I.},
 title = {Using Machine Learning to Focus Iterative Optimization},
 booktitle = {CGO: Proceedings of the International Symposium on Code Generation and Optimization},
 year = {2006},
 isbn = {0-7695-2499-0},
 pages = {295--305},
 doi = {http://dx.doi.org/10.1109/CGO.2006.37},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 abstract={
  This paper develops a new methodology to reduce this number and hence speed up iterative optimization. It uses predictive modelling from the domain of machine learning to automatically focus search on those areas likely to give greatest performance. This approach is independent of search algorithm, search space or compiler infrastructure and scales gracefully with the compiler optimization space size. Off-line, a training set of programs is iteratively evaluated and the shape of the spaces and program features are modelled. These models are learnt and used to focus the iterative optimization of a new program. We evaluate two learnt models, an independent and Markov model, and evaluate their worth on two embedded platforms, the Texas Instrument C6713 and the AMD Au1500. We show that such learnt models can speed up iterative search on large spaces by an order of magnitude. This translates into an average speedup of 1.22 on the TI C6713 and 1.27 on the AMD Au1500 in just 2 evaluations.
  }
 }

@inproceedings{Cavazos:CGO07,
 author = {Cavazos, John and Fursin, Grigori and Agakov, Felix and Bonilla, Edwin and O'Boyle, Michael F. P. and Temam, Olivier},
 title = {Rapidly Selecting Good Compiler Optimizations using Performance Counters},
 booktitle = {CGO '07: Proceedings of the International Symposium on Code Generation and Optimization},
 year = {2007},
 isbn = {0-7695-2764-7},
 pages = {185--197},
 doi = {http://dx.doi.org/10.1109/CGO.2007.32},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 abstract={
This paper proposes a different approach using performance counters as a means of determining good compiler optimization settings. This is achieved by learning a model off-line which can then be used to determine good settings for any new program. We show that such an approach outperforms the state-ofthe- art and is two orders of magnitude faster on average. Furthermore, we show that our performance counter-based approach outperforms techniques based on static code features. Using our technique we achieve a 17% improvement over the highest optimization setting of the commercial PathScale EKOPath 2.3.1 optimizing compiler on the SPEC benchmark suite on a recent AMD Athlon 64 3700+ platform.
 }
 }

@INPROCEEDINGS{Fursin07midatasets:creating,
    author = {Grigori Fursin and John Cavazos and Olivier Temam},
    title = {Midatasets: Creating the conditions for a more realistic evaluation of iterative optimization},
    booktitle = {In Proceedings of the International Conference on High Performance Embedded Architectures & Compilers (HiPEAC},
    year = {2007},
    pages = {245--260},
    publisher = {Springer LNCS},
    abstract={
        Iterative optimization has become a popular technique to obtain improvements over the default settings in a compiler for performance-critical applications, such as embedded applications. An implicit assumption, however, is that the best configuration found for any arbitrary data set will work well with other data sets that a program uses. In this article, we evaluate that assumption based on 20 data sets per benchmark of the MiBench suite. We find that, though a majority of programs exhibit stable performance across data sets, the variability can significantly increase with many optimizations. However, for the best optimization configurations, we find that this variability is in fact small. Furthermore, we show that it is possible to find a compromise optimization configuration across data sets which is often within 5 % of the best possible configuration for most data sets, and that the iterative process can converge in less than 20 iterations (for a population of 200 optimization configurations). All these conclusions have significant and positive implications for the practical utilization of iterative optimization.  }
}

@inproceedings{Dubach:MICRO09,
 author = {Dubach, Christophe and Jones, Timothy M. and Bonilla, Edwin V. and Fursin, Grigori and O'Boyle, Michael F. P.},
 title = {Portable compiler optimisation across embedded programs and microarchitectures using machine learning},
 booktitle = {MICRO 42: Proceedings of the 42nd Annual IEEE/ACM International Symposium on Microarchitecture},
 year = {2009},
 isbn = {978-1-60558-798-1},
 pages = {78--88},
 location = {New York, New York},
 doi = {http://doi.acm.org/10.1145/1669112.1669124},
 publisher = {ACM},
 address = {New York, NY, USA},
  abstract={
Building an optimising compiler is a difficult and time consuming task which must be repeated for each generation of a microprocessor. As the underlying microarchitecture changes from one generation to the next, the compiler must be retuned to optimise specifically for that new system. It may take several releases of the compiler to effectively exploit a processor's performance potential, by which time a new generation has appeared and the process starts again.

We address this challenge by developing a portable optimising compiler. Our approach employs machine learning to automatically learn the best optimisations to apply for any new program on a new microarchitectural configuration. It achieves this by learning a model off-line which maps a microarchitecture description plus the hardware counters from a single run of the program to the best compiler optimisation passes. Our compiler gains 67% of the maximum speedup obtainable by an iterative compiler search using 1000 evaluations. We obtain, on average, a 1.16x speedup over the highest default optimisation level across an entire microarchitecture configuration space, achieving a 4.3x speedup in the best case. We demonstrate the robustness of this technique by applying it to an extended microarchitectural space where we achieve comparable performance.
  }
 }

@article{kirkpatrick:Science83,
author = "S. Kirkpatrick and C. D. Gelatt and M. P. Vecchi",
title = "Optimization by Simulated Annealing",
journal = "Science, Number 4598, 13 May 1983",
volume = "220, 4598",
pages = "671--680",
year = "1983"}


@InProceedings{Hook:JACM61,
     Author = {R. Hooke and T. A. Jeeves},
     Title = {Direct Search solution of numerical and statistical problems}, 
     BookTitle = JACM,
     Pages = {212-229},
     Year = 1961}
     
