% jichi.bib
% 2011/11

% http://dblp.uni-trier.de/rec/bibtex/conf/ipps/GuoMYMK14
@inproceedings{jichi:ipdps14,
  author    = {Jichi Guo and
               Jiayuan Meng and
               Qing Yi and
               Vitali A. Morozov and
               Kalyan Kumaran},
  title     = {Analytically Modeling Application Execution for Software-Hardware
               Co-design},
  booktitle = {2014 {IEEE} 28th International Parallel and Distributed Processing
               Symposium, Phoenix, AZ, USA, May 19-23, 2014},
  year      = {2014},
  pages     = {468--477},
  url       = {http://dx.doi.org/10.1109/IPDPS.2014.56},
  doi       = {10.1109/IPDPS.2014.56},
  timestamp = {Wed, 15 Oct 2014 19:04:00 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/ipps/GuoMYMK14},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{jichi:icpp11,
  author={Guo, Jichi and Stiles, Mike and Yi, Qing and Psarris, Kleanthis},
  booktitle={Parallel Processing (ICPP), 2011 International Conference},
  title={Enhancing the Role of Inlining in Effective Interprocedural Parallelization},
  year={2011},
  month={sept.},
  volume={},
  number={},
  pages={265 -274},
  abstract={The emergence of multi-core architectures makes it essential for optimizing compilers to automatically extract parallelism for large scienti #x0C3;" #x0C2; #x0A8; #x0C3; #133;c applications composed of many subroutines residing in different #x0C3;" #x0C2; #x0A8; #x0C3; #133;les. In lining is a well-known technique which can be used to erase procedural boundaries and enable more aggressive loop parallelization. However, conventional in lining cannot be applied to external libraries where the source code is not available, and when overly applied, it can degrade the effectiveness of compiler optimizations due to excessive code complexity. This paper highlights some obstacles we encountered while applying conventional in lining combined with automatic loop parallelization using the Polaris optimizing compiler and presents a new approach, annotation-based in lining, to effectively overcome these obstacles. Our experimental results show that the annotation-based in lining approach can eliminate negative impact of conventional in lining while enhancing the effectiveness of interprocedural parallelization for a majority of applications from the PERFECT benchmark suite.},
  keywords={},
  doi={10.1109/ICPP.2011.68},
  ISSN={0190-3918},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6047195},
}

% http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Guo:Jichi.html
% http://dblp.uni-trier.de/rec/bibtex/journals/procedia/YiG11
@article{qing:iwapt11,
  author    = {Qing Yi and
               Jichi Guo},
  title     = {Extensive Parameterization And Tuning of Architecture-Sensitive Optimizations},
  journal   = {Procedia CS},
  volume    = {4},
  year      = {2011},
  pages     = {2156-2165},
  ee        = {http://dx.doi.org/10.1016/j.procs.2011.04.236},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@inproceedings{qasem:npc10,
  author = {Qasem, Apan and Guo, Jichi and Rahman, Faizur and Yi, Qing},
  title = {Exposing tunable parameters in multi-threaded numerical code},
  booktitle = {Proceedings of the 2010 IFIP international conference on Network and parallel computing},
  series = {NPC'10},
  year = {2010},
  isbn = {3-642-15671-1, 978-3-642-15671-7},
  location = {Zhengzhou, China},
  pages = {46--60},
  numpages = {15},
  acmid = {1882019},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg},
  keywords = {autotuning, memory hierarchy, optimization, parallelism},
  url = {http://dl.acm.org/citation.cfm?id=1882011.1882019},
}

@inproceedings{rahman:hipeac2011,
  author = {Rahman, Shah Faizur and Guo, Jichi and Yi, Qing},
  title = {Automated empirical tuning of scientific codes for performance and power consumption},
  booktitle = {Proceedings of the 6th International Conference on High Performance and Embedded Architectures and Compilers},
  series = {HiPEAC '11},
  year = {2011},
  isbn = {978-1-4503-0241-8},
  location = {Heraklion, Greece},
  pages = {107--116},
  numpages = {10},
  doi = {10.1145/1944862.1944880},
  acmid = {1944880},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {compiler optimizations, empirical tuning, performance, power consumption},
  url = {http://doi.acm.org/10.1145/1944862.1944880},
}

% EOF
